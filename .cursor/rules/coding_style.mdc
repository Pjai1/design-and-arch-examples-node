---
description:
globs:
alwaysApply: true
---
# Coding Style Guidelines

- Use TypeScript for all new code
- Follow the Airbnb JavaScript Style Guide
- Use meaningful variable and function names
- Keep functions small and focused
- Add appropriate comments and documentation
- Use consistent indentation (2 spaces)
- Follow SOLID principles
- Write clean, maintainable code
- Use proper error handling
- Implement proper logging

# Coding Standards

- Use OXlint linting.
- Use Prettier for consistent code formatting.
- Prefer functional and declarative programming patterns. Use classes judiciously when they provide clear benefits (e.g., for implementing interfaces, managing complex state, or encapsulating related behavior).
- Highly preferred to use a TDD approach
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
- Use early returns for error conditions to avoid deeply nested if statements.
- Make sure to keep the (root/folder) README up to date with any changes that were made
- Make sure to address TODO comments in due time and don't delete them
- Don't bother with JSDoc, the code and typescript types should be explanatory enough
- Make sure to clean-up unused variables and imports

# Naming Conventions

- Use lowercase with dashes for directories & files(e.g., components/auth-wizard).
- Use the \*.spec.ts file naming convention for writing unit tests.

# TypeScript Usage

- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; object typed `as const` are preferred.
- Use advanced TypeScript features (type guards, mapped types, conditional types)
